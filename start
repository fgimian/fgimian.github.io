#!/usr/bin/env bash

develop()
{
  # Update git submodules
  git submodule update --init

  # Run the hugo server
  hugo server -s blog
}

deploy()
{
  local deploy_dir

  # Generate a new temporary directory for our deployment
  deploy_dir=$(mktemp -d -t hugo-deploy)

  # Determine the remote origin Git location
  git_remote=$(git remote get-url --push origin)

  # Update git submodules
  git submodule update --init

  # Build the site in the deploy directory
  hugo -s blog -d "$deploy_dir"

  # Initialise the deploy directory as a Git repository and add content
  cd "$deploy_dir" || exit 1

  # Create a new Git repository and add content
  git init
  git remote add origin "$git_remote"
  git checkout --orphan master
  git add .
  git commit -m "Site updated at $(date -u "+%Y-%m-%d %H:%M:%S") UTC"

  # Deploy code to the master branch
  git push --force origin master

  # Clean up the deploy directory
  rm -rf "$deploy_dir"
}

if [[ $0 == "${BASH_SOURCE[0]}" ]]
then
  # Check that the command requested has been defined
  if [ $# -ge 1 ] && declare -f "$1" > /dev/null
  then
    # Setup bash similar to a Makefile (pass environment variables to child
    # processes, stop on failure and set the return code to the last failed
    # command).
    set -euxo pipefail

    # Run the requested command
    $1
  else
    if [ $# -ge 1 ]
    then
      echo "$0: '$1' is not a supported command"
    else
      echo "usage: $0 <command>"
    fi
    echo "
      available commands are as follows
         develop    Start the development server
         deploy     Build and deploy the codebase to GitHub pages

      Please pop over to https://fgimian.github.io/ when you've deployed new
      posts to check them out." | sed -E "s/ {6}//"
    exit 1
  fi
fi
